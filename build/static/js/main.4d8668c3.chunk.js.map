{"version":3,"sources":["components/Header/index.js","components/Sidebar/Index.js","components/Home/Index.js","config/axios.js","components/Country/India.js","components/Country/Russia.js","components/Country/Canada.js","components/Country/Australia.js","components/Country/Brazil.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","backgroundColor","href","src","height","width","margin_left","React","Component","SidebarIcon","Icon","sidebarLink","url","name","icon","activeIcon","SideNav","state","isSidebar","handleClick","setState","prevState","dashboardRoute","obj","console","log","this","Fragment","map","index","key","alt","to","onClick","jsx","Home","axios","Axios","create","baseURL","India","props","componentDidMount","Promise","all","get","then","values","weather","catch","err","cities","place","length","scope","weathernow","data","location","current","observation_time","temperature","weather_icons","weather_descriptions","wind_speed","Russia","Canada","Australia","Brazil","App","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4d8668c3.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className = \"container-fluid\">\r\n    <nav className=\"navbar\"style={{ backgroundColor: '#FF7777' }} >\r\n    <a href=\"#\" className=\"navbar-brand \"><img src = \"https://seeklogo.com/images/P/partly-sunny-weather-symbo-logo-FE1CF4CAE5-seeklogo.com.gif\" style={{height:\"3rem\", width: \"3rem\", margin_left: \"2rem\"}}/></a>\r\n        <ul className=\"nav justify-content-end\">\r\n  \r\n        {/* <li className=\"nav-item active \" ><Link to = \"/\" className=\"nav-link\"  style={{text_align:\"end\", color:\"black\"}}>Home</Link></li> */}\r\n        </ul>\r\n        </nav>\r\n    \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { Grid } from \"@material-ui/core\";\r\n// import Icon from \"https://cdn.onlinewebfonts.com/svg/img_338609.png\"\r\n let Icon = \"\"\r\n\r\nlet SidebarIcon = {\r\n    Icon: Icon,\r\n    Icon: Icon,\r\n    Icon: Icon\r\n  };\r\n  const sidebarLink = [\r\n    {\r\n      url: \"/india\",\r\n      name: \"India\",\r\n      icon: SidebarIcon.Icon,\r\n      activeIcon: SidebarIcon.Icon\r\n    },\r\n    {\r\n      url: \"/russia\",\r\n      name: \"Russia\",\r\n      icon: SidebarIcon.Icon,\r\n      activeIcon: SidebarIcon.Icon\r\n    },\r\n    {\r\n      url: \"/canada\",\r\n      name: \"Canada\",\r\n      icon: SidebarIcon.Icon,\r\n      activeIcon: SidebarIcon.Icon\r\n    },\r\n    {\r\n        url: \"/australia\",\r\n        name: \"Australia\",\r\n        icon: SidebarIcon.Icon,\r\n        activeIcon: SidebarIcon.Icon\r\n      },\r\n      {\r\n        url: \"/brazil\",\r\n        name: \"Brazil\",\r\n        icon: SidebarIcon.Icon,\r\n        activeIcon: SidebarIcon.Icon\r\n      }\r\n  ];\r\n\r\nclass SideNav extends React.Component {\r\n  state = {\r\n    isSidebar: true\r\n  };\r\n  handleClick = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isSidebar: !prevState.isSidebar\r\n      };\r\n    });\r\n  };\r\n  dashboardRoute = obj => {\r\n    console.log(obj.name);\r\n  };\r\n  render() {\r\n    const { isSidebar } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n            <div className = \"row\">\r\n              <div className = \"col-md-2 off-set-2\">\r\n              {isSidebar ? (\r\n          <React.Fragment>\r\n            {sidebarLink.map((obj, index) => (\r\n              <div className=\"siedbarLinks\" key={index}>\r\n                <img src={obj.icon} alt=\"\" className=\"icons\" />\r\n                <Link\r\n                  className=\"links\"\r\n                  to={obj.url}\r\n                  onClick={() => this.dashboardRoute(obj)}\r\n                >\r\n                  {obj.name}\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </React.Fragment>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n              </div>\r\n              <div className = \"col-md-6\"><br/><br/>\r\n                <img src = \"https://videohive.img.customer.envatousercontent.com/files/1616804/Preview_image.jpg?auto=compress%2Cformat&fit=crop&crop=top&max-h=8000&max-w=590&s=5891ba8b802b66c8174a9b90534bd7dc\" className=\"weatherimage\" alt = \"\"/>\r\n              </div>\r\n            </div>\r\n       \r\n        <style jsx=\"true\">\r\n          {`\r\n            .list-group-item {\r\n              border: none;\r\n            }\r\n            .icons {\r\n              padding: 0rem 1rem 0rem 0rem;\r\n            }\r\n            .siedbarLinks {\r\n              padding: 0.8rem 0rem 1rem 2rem;\r\n              background-color: #3F3F3F;\r\n              height: 6rem;\r\n              margin-left: 1rem;\r\n            }\r\n            .siedbarLinks1 {\r\n              padding: 0.8rem 0rem 1rem 2rem;\r\n              background: #3aec69 0% 0% no-repeat padding-box;\r\n              background-color: #1f1f14;\r\n              opacity: 0.5;\r\n            }\r\n            .links {\r\n              color: white;\r\n              opacity: 0.6;\r\n            }\r\n            .weatherimage{\r\n              margin-left: 7rem;\r\n              height: 30rem;\r\n              width: 66rem;\r\n            }\r\n          `}\r\n        </style>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideNav;","import React from \"react\"\r\nimport Header from \"../Header/index\"\r\nimport SideNav from \"../Sidebar/Index\"\r\n\r\nclass Home extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className = \"column\">\r\n                <div>\r\n                <Header/>\r\n                </div>\r\n                <div>\r\n                <SideNav/>\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import Axios from 'axios'\r\n\r\nconst axios = Axios.create({\r\n    baseURL: `http://api.weatherstack.com/current?access_key=6ae470ea28f70f3481a461a68dd96cbb&query=`\r\n})\r\n\r\n// const axios = Axios.create({\r\n//     baseURL: '/'\r\n// })\r\n\r\nexport default axios","import React from \"react\"\r\nimport axios from \"../../config/axios\"\r\nimport Home from \"../Home/Index\"\r\n\r\nclass India extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cities : [\"Mumbai\", \"Delhi\", \"Bangalore\", \"Hyderabad\", \"Ahmedabad\", \"Berhampur\"],\r\n            weather: [],\r\n            place: []\r\n       \r\n        }\r\n    }\r\n    componentDidMount=() =>{\r\n        Promise.all([axios.get('Mumbai'), \r\n        axios.get('Delhi'),\r\n        axios.get('Bangalore'), \r\n        axios.get('Hyderabad'),\r\n        axios.get('Ahmedabad'),\r\n        axios.get('Berhampur')\r\n    ])    \r\n            .then((values) => {\r\n             const weather = values\r\n              this.setState({weather:weather})\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.weather, \"weather\")\r\n        return(    \r\n                <div className=\"container mt-5\">\r\n                <br/>\r\n               <h2> Listing Weather Report Of India - {this.state.cities.length}</h2>\r\n               <br/>\r\n               <table className=\"table\">\r\n                   <thead>\r\n                       <tr>\r\n                           <th scope=\"col\">Place</th>\r\n                           <th scope=\"col\">Time</th>\r\n                           <th scope=\"col\">Temperature</th>\r\n                           <th scope=\"col\">Icon</th>\r\n                           <th scope=\"col\">Description</th>\r\n                           <th scope=\"col\">Wind Speed</th>\r\n                       </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   {\r\n                           this.state.weather.map((weathernow,index) =>{\r\n                               return(<tr key ={index}>\r\n                                   <td>{weathernow.data.location.name}</td>\r\n                                    <td>{weathernow.data.current.observation_time}</td>\r\n                                    <td>{weathernow.data.current.temperature}</td>\r\n                                    <td>{weathernow.data.current.weather_icons}</td>\r\n                                    <td>{weathernow.data.current.weather_descriptions}</td>\r\n                                    <td>{weathernow.data.current.wind_speed}</td>\r\n                               </tr>)\r\n                           })\r\n                       }\r\n                   </tbody>\r\n\r\n               </table>\r\n            </div>\t\r\n            \r\n        )\r\n    }\r\n}\r\nexport default India","import React from \"react\"\r\nimport axios from \"../../config/axios\"\r\n\r\n\r\nclass Russia extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cities : [\"Moscow\", \"Saint Petersburg\", \"Novosibirsk\", \"Yekaterinburg\", \"Kazan\", \"Chelyabinsk\"],\r\n            weather: [],\r\n            place: []\r\n       \r\n        }\r\n    }\r\n       componentDidMount=() =>{\r\n        Promise.all([axios.get('Moscow'), \r\n        axios.get('Saint Petersburg'),\r\n        axios.get('Novosibirsk'), \r\n        axios.get('Yekaterinburg'),\r\n        axios.get('Kazan'),\r\n        axios.get('Chelyabinsk')\r\n    ])    \r\n            .then((values) => {\r\n             const weather = values\r\n              this.setState({weather:weather})\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n    \r\n    render(){\r\n        console.log(this.state.weather, \"weather\")\r\n        return(\r\n           \r\n            <div className=\"container mt-5\">\r\n                <br/>\r\n               <h2> Listing Weather Report Of Russia - {this.state.cities.length}</h2>\r\n               <br/>\r\n               <table className=\"table\">\r\n                   <thead>\r\n                       <tr>\r\n                           <th scope=\"col\">Place</th>\r\n                           <th scope=\"col\">Time</th>\r\n                           <th scope=\"col\">Temperature</th>\r\n                           <th scope=\"col\">Icon</th>\r\n                           <th scope=\"col\">Description</th>\r\n                           <th scope=\"col\">Wind Speed</th>\r\n                       </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                       {\r\n                           this.state.weather.map((weathernow,index) =>{\r\n                               return(<tr key ={index}>\r\n                                   <td>{weathernow.data.location.name}</td>\r\n                                    <td>{weathernow.data.current.observation_time}</td>\r\n                                    <td>{weathernow.data.current.temperature}</td>\r\n                                    <td>{weathernow.data.current.weather_icons}</td>\r\n                                    <td>{weathernow.data.current.weather_descriptions}</td>\r\n                                    <td>{weathernow.data.current.wind_speed}</td>\r\n                               </tr>)\r\n                           })\r\n                       }\r\n                   </tbody>\r\n\r\n               </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Russia","import React from \"react\"\r\nimport axios from \"../../config/axios\"\r\n\r\n\r\nclass Canada extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cities : [\"Toronto\", \"Montreal\", \"Ottawa\", \"Calgary\", \"Edmonton\", \"Victoria\"],\r\n            weather: [],\r\n            place: []\r\n       \r\n        }\r\n    }\r\n    componentDidMount=() =>{\r\n        Promise.all([axios.get('Toronto'), \r\n        axios.get('Montreal'),\r\n        axios.get('Ottawa'), \r\n        axios.get('Calgary'),\r\n        axios.get('Edmonton'),\r\n        axios.get('Victoria')\r\n    ])    \r\n            .then((values) => {\r\n             const weather = values\r\n              this.setState({weather:weather})\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n    \r\n    render(){\r\n        console.log(this.state.weather, \"weather\")\r\n        return(\r\n           \r\n            <div className=\"container mt-5\">\r\n                <br/>\r\n               <h2> Listing Weather Report Of Canada - {this.state.cities.length}</h2>\r\n               <br/>\r\n               <table className=\"table\">\r\n                   <thead>\r\n                       <tr>\r\n                           <th scope=\"col\">Place</th>\r\n                           <th scope=\"col\">Time</th>\r\n                           <th scope=\"col\">Temperature</th>\r\n                           <th scope=\"col\">Icon</th>\r\n                           <th scope=\"col\">Description</th>\r\n                           <th scope=\"col\">Wind Speed</th>\r\n                       </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   {\r\n                           this.state.weather.map((weathernow,index) =>{\r\n                               return(<tr key ={index}>\r\n                                   <td>{weathernow.data.location.name}</td>\r\n                                    <td>{weathernow.data.current.observation_time}</td>\r\n                                    <td>{weathernow.data.current.temperature}</td>\r\n                                    <td>{weathernow.data.current.weather_icons}</td>\r\n                                    <td>{weathernow.data.current.weather_descriptions}</td>\r\n                                    <td>{weathernow.data.current.wind_speed}</td>\r\n                               </tr>)\r\n                           })\r\n                       }\r\n                   </tbody>\r\n\r\n               </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Canada","import React from \"react\"\r\nimport axios from \"../../config/axios\"\r\n\r\nclass Australia extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cities : [\"Sydney\", \"Melbourne\", \"Brisbane\", \"Perth\", \"Canberra\", \"Hobart\"],\r\n            weather: [],\r\n            place: []\r\n       \r\n        }\r\n    }\r\n    componentDidMount=() =>{\r\n        Promise.all([axios.get('Sydney'), \r\n        axios.get('Melbourne'),\r\n        axios.get('Brisbane'), \r\n        axios.get('Perth'),\r\n        axios.get('Canberra'),\r\n        axios.get('Hobart')\r\n    ])    \r\n            .then((values) => {\r\n             const weather = values\r\n              this.setState({weather:weather})\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n    \r\n    render(){\r\n        console.log(this.state.weather, \"weather\")\r\n        return(\r\n           \r\n            <div className=\"container mt-5\">\r\n                <br/>\r\n               <h2> Listing Weather Report Of Australia - {this.state.cities.length}</h2>\r\n               <br/>\r\n               <table className=\"table\">\r\n                   <thead>\r\n                       <tr>\r\n                           <th scope=\"col\">Place</th>\r\n                           <th scope=\"col\">Time</th>\r\n                           <th scope=\"col\">Temperature</th>\r\n                           <th scope=\"col\">Icon</th>\r\n                           <th scope=\"col\">Description</th>\r\n                           <th scope=\"col\">Wind Speed</th>\r\n                       </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   {\r\n                           this.state.weather.map((weathernow,index) =>{\r\n                               return(<tr key ={index}>\r\n                                   <td>{weathernow.data.location.name}</td>\r\n                                    <td>{weathernow.data.current.observation_time}</td>\r\n                                    <td>{weathernow.data.current.temperature}</td>\r\n                                    <td>{weathernow.data.current.weather_icons}</td>\r\n                                    <td>{weathernow.data.current.weather_descriptions}</td>\r\n                                    <td>{weathernow.data.current.wind_speed}</td>\r\n                               </tr>)\r\n                           })\r\n                       }\r\n                   </tbody>\r\n\r\n               </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Australia","import React from \"react\"\r\nimport axios from \"../../config/axios\"\r\n\r\n\r\nclass Brazil extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cities : [\"Brasília\", \"Salvador\", \"Curitiba\", \"Recife\", \"Goiânia\", \"Belém\"],\r\n            weather: [],\r\n            place: []\r\n       \r\n        }\r\n    }\r\n    componentDidMount=() =>{\r\n        Promise.all([axios.get('Brasília'), \r\n        axios.get('Salvador'),\r\n        axios.get('Curitiba'), \r\n        axios.get('Recife'),\r\n        axios.get('Goiânia'),\r\n        axios.get('Belém')\r\n    ])    \r\n            .then((values) => {\r\n             const weather = values\r\n              this.setState({weather:weather})\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n    \r\n    render(){\r\n        console.log(this.state.weather, \"weather\")\r\n        return(\r\n           \r\n            <div className=\"container mt-5\">\r\n                <br/>\r\n               <h2> Listing Weather Report Of Brazil - {this.state.cities.length}</h2>\r\n               <br/>\r\n               <table className=\"table\">\r\n                   <thead>\r\n                       <tr>\r\n                           <th scope=\"col\">Place</th>\r\n                           <th scope=\"col\">Time</th>\r\n                           <th scope=\"col\">Temperature</th>\r\n                           <th scope=\"col\">Icon</th>\r\n                           <th scope=\"col\">Description</th>\r\n                           <th scope=\"col\">Wind Speed</th>\r\n                       </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   {\r\n                           this.state.weather.map((weathernow,index) =>{\r\n                               return(<tr key ={index}>\r\n                                   <td>{weathernow.data.location.name}</td>\r\n                                    <td>{weathernow.data.current.observation_time}</td>\r\n                                    <td>{weathernow.data.current.temperature}</td>\r\n                                    <td>{weathernow.data.current.weather_icons}</td>\r\n                                    <td>{weathernow.data.current.weather_descriptions}</td>\r\n                                    <td>{weathernow.data.current.wind_speed}</td>\r\n                               </tr>)\r\n                           })\r\n                       }\r\n                   </tbody>\r\n\r\n               </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Brazil","import React from 'react';\nimport Home from \"./components/Home/Index\"\nimport {BrowserRouter, Route, Link, Switch} from 'react-router-dom'\nimport India from \"./components/Country/India\"\nimport Russia from \"./components/Country/Russia\"\nimport Canada from \"./components/Country/Canada\"\nimport Australia from \"./components/Country/Australia\"\nimport Brazil from \"./components/Country/Brazil\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n\n\n\n      <Switch>\n      <Route path =\"/\" component = {Home} exact = {true}/>\n      <Route path = \"/india\" component = {India} exact = {true}/>\n      <Route path = \"/russia\" component = {Russia} exact = {true}/>\n      <Route path = \"/canada\" component = {Canada} exact = {true}/>\n      <Route path = \"/australia\" component = {Australia} exact = {true}/>\n      <Route path = \"/brazil\" component = {Brazil} exact={true}/>\n      </Switch>\n    </BrowserRouter>\n    \n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}